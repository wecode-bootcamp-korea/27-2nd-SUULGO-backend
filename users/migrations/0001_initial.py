# Generated by Django 4.0 on 2021-12-16 16:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlcoholCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'alcohol_categories',
            },
        ),
        migrations.CreateModel(
            name='AlcoholLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('number', models.IntegerField()),
            ],
            options={
                'db_table': 'alcohol_limits',
            },
        ),
        migrations.CreateModel(
            name='DrinkingMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'drinking_methods',
            },
        ),
        migrations.CreateModel(
            name='Flavor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'flavors',
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'genders',
            },
        ),
        migrations.CreateModel(
            name='Mbti',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('information', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'mbtis',
            },
        ),
        migrations.CreateModel(
            name='Stack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('number', models.IntegerField()),
            ],
            options={
                'db_table': 'stacks',
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_number', models.PositiveSmallIntegerField()),
                ('stack', models.IntegerField()),
                ('alcohol_limit', models.IntegerField()),
                ('alcohol_level', models.CharField(max_length=100)),
                ('comment', models.CharField(max_length=500)),
                ('favorite_place', models.CharField(max_length=200)),
                ('favorite_food', models.CharField(max_length=200)),
                ('hobby', models.CharField(max_length=200)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.gender')),
                ('mbti', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.mbti')),
            ],
            options={
                'db_table': 'surveys',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('kakao_id', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=50)),
                ('profile_image_url', models.URLField(max_length=500)),
                ('email', models.CharField(max_length=200, null=True)),
                ('deleted_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='SurveyFlavor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flavor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.flavor')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.survey')),
            ],
            options={
                'db_table': 'survey_flavors',
            },
        ),
        migrations.CreateModel(
            name='SurveyDrinkingMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drinking_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.drinkingmethod')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.survey')),
            ],
            options={
                'db_table': 'survey_drinking_methods',
            },
        ),
        migrations.CreateModel(
            name='SurveyAlcoholCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alcohol_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.alcoholcategory')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.survey')),
            ],
            options={
                'db_table': 'survey_alcohol_categories',
            },
        ),
        migrations.AddField(
            model_name='survey',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.user'),
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('time', models.DateTimeField()),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requester', to='users.user')),
                ('respondent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respondent', to='users.user')),
            ],
            options={
                'db_table': 'meetings',
            },
        ),
        migrations.AddField(
            model_name='flavor',
            name='surveys',
            field=models.ManyToManyField(through='users.SurveyFlavor', to='users.Survey'),
        ),
        migrations.AddField(
            model_name='drinkingmethod',
            name='surveys',
            field=models.ManyToManyField(through='users.SurveyDrinkingMethod', to='users.Survey'),
        ),
        migrations.AddField(
            model_name='alcoholcategory',
            name='surveys',
            field=models.ManyToManyField(through='users.SurveyAlcoholCategory', to='users.Survey'),
        ),
    ]
